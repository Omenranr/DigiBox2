{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatRpcError = exports.promisify = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nfunction promisify(originalFn, thisArg) {\n  const promisifiedFunction = (...callArgs) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err === null || typeof err === \"undefined\") {\n          reject(err);\n        }\n\n        resolve(data);\n      };\n\n      originalFn.apply(thisArg, [...callArgs, callback]);\n    });\n  });\n\n  return promisifiedFunction;\n}\n\nexports.promisify = promisify;\n\nfunction formatRpcError(error) {\n  const message = error.message || \"Failed or Rejected Request\";\n  let code = -32000;\n\n  if (error && !error.code) {\n    switch (message) {\n      case \"Parse error\":\n        code = -32700;\n        break;\n\n      case \"Invalid request\":\n        code = -32600;\n        break;\n\n      case \"Method not found\":\n        code = -32601;\n        break;\n\n      case \"Invalid params\":\n        code = -32602;\n        break;\n\n      case \"Internal error\":\n        code = -32603;\n        break;\n\n      default:\n        code = -32000;\n        break;\n    }\n  }\n\n  const result = {\n    code,\n    message\n  };\n  return result;\n}\n\nexports.formatRpcError = formatRpcError;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"(function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self, e.JSBI = t());\n})(this, function () {\n  'use strict';\n\n  var e = Math.imul,\n      t = Math.clz32;\n\n  function i(e) {\n    \"@babel/helpers - typeof\";\n\n    return i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n      return typeof e;\n    } : function (e) {\n      return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n    }, i(e);\n  }\n\n  function _(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function n(e, t) {\n    for (var _, n = 0; n < t.length; n++) _ = t[n], _.enumerable = _.enumerable || !1, _.configurable = !0, \"value\" in _ && (_.writable = !0), Object.defineProperty(e, _.key, _);\n  }\n\n  function l(e, t, i) {\n    return t && n(e.prototype, t), i && n(e, i), e;\n  }\n\n  function g(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && u(e, t);\n  }\n\n  function a(e) {\n    return a = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n      return e.__proto__ || Object.getPrototypeOf(e);\n    }, a(e);\n  }\n\n  function u(e, t) {\n    return u = Object.setPrototypeOf || function (e, t) {\n      return e.__proto__ = t, e;\n    }, u(e, t);\n  }\n\n  function s() {\n    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n    if (Reflect.construct.sham) return !1;\n    if (\"function\" == typeof Proxy) return !0;\n\n    try {\n      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;\n    } catch (t) {\n      return !1;\n    }\n  }\n\n  function r() {\n    return r = s() ? Reflect.construct : function (e, t, i) {\n      var _ = [null];\n\n      _.push.apply(_, t);\n\n      var n = Function.bind.apply(e, _),\n          l = new n();\n      return i && u(l, i.prototype), l;\n    }, r.apply(null, arguments);\n  }\n\n  function d(e) {\n    return -1 !== Function.toString.call(e).indexOf(\"[native code]\");\n  }\n\n  function h(e) {\n    var t = \"function\" == typeof Map ? new Map() : void 0;\n    return h = function (e) {\n      function i() {\n        return r(e, arguments, a(this).constructor);\n      }\n\n      if (null === e || !d(e)) return e;\n      if (\"function\" != typeof e) throw new TypeError(\"Super expression must either be null or a function\");\n\n      if (\"undefined\" != typeof t) {\n        if (t.has(e)) return t.get(e);\n        t.set(e, i);\n      }\n\n      return i.prototype = Object.create(e.prototype, {\n        constructor: {\n          value: i,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), u(i, e);\n    }, h(e);\n  }\n\n  function b(e) {\n    if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return e;\n  }\n\n  function m(e, t) {\n    return t && (\"object\" == typeof t || \"function\" == typeof t) ? t : b(e);\n  }\n\n  function c(e) {\n    var t = s();\n    return function () {\n      var i,\n          _ = a(e);\n\n      if (t) {\n        var n = a(this).constructor;\n        i = Reflect.construct(_, arguments, n);\n      } else i = _.apply(this, arguments);\n\n      return m(this, i);\n    };\n  }\n\n  function v(e, t) {\n    if (e) {\n      if (\"string\" == typeof e) return f(e, t);\n      var i = Object.prototype.toString.call(e).slice(8, -1);\n      return \"Object\" === i && e.constructor && (i = e.constructor.name), \"Map\" === i || \"Set\" === i ? Array.from(e) : \"Arguments\" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? f(e, t) : void 0;\n    }\n  }\n\n  function f(e, t) {\n    (null == t || t > e.length) && (t = e.length);\n\n    for (var _ = 0, n = Array(t); _ < t; _++) n[_] = e[_];\n\n    return n;\n  }\n\n  function y(e, t) {\n    var _ = \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n\n    if (!_) {\n      if (Array.isArray(e) || (_ = v(e)) || t && e && \"number\" == typeof e.length) {\n        _ && (e = _);\n\n        var n = 0,\n            l = function () {};\n\n        return {\n          s: l,\n          n: function () {\n            return n >= e.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: e[n++]\n            };\n          },\n          e: function (t) {\n            throw t;\n          },\n          f: l\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var g,\n        a = !0,\n        u = !1;\n    return {\n      s: function () {\n        _ = _.call(e);\n      },\n      n: function () {\n        var e = _.next();\n\n        return a = e.done, e;\n      },\n      e: function (t) {\n        u = !0, g = t;\n      },\n      f: function () {\n        try {\n          a || null == _.return || _.return();\n        } finally {\n          if (u) throw g;\n        }\n      }\n    };\n  }\n\n  var k = function (e) {\n    var t = Math.abs,\n        n = Math.max;\n\n    function o(e, t) {\n      var i;\n      if (_(this, o), e > o.__kMaxLength) throw new RangeError(\"Maximum BigInt size exceeded\");\n      return i = a.call(this, e), i.sign = t, i;\n    }\n\n    g(o, e);\n    var a = c(o);\n    return l(o, [{\n      key: \"toDebugString\",\n      value: function () {\n        var e,\n            t = [\"BigInt[\"],\n            i = y(this);\n\n        try {\n          for (i.s(); !(e = i.n()).done;) {\n            var _ = e.value;\n            t.push((_ ? (_ >>> 0).toString(16) : _) + \", \");\n          }\n        } catch (e) {\n          i.e(e);\n        } finally {\n          i.f();\n        }\n\n        return t.push(\"]\"), t.join(\"\");\n      }\n    }, {\n      key: \"toString\",\n      value: function () {\n        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 10;\n        if (2 > e || 36 < e) throw new RangeError(\"toString() radix argument must be between 2 and 36\");\n        return 0 === this.length ? \"0\" : 0 == (e & e - 1) ? o.__toStringBasePowerOfTwo(this, e) : o.__toStringGeneric(this, e, !1);\n      }\n    }, {\n      key: \"__copy\",\n      value: function () {\n        for (var e = new o(this.length, this.sign), t = 0; t < this.length; t++) e[t] = this[t];\n\n        return e;\n      }\n    }, {\n      key: \"__trim\",\n      value: function () {\n        for (var e = this.length, t = this[e - 1]; 0 === t;) e--, t = this[e - 1], this.pop();\n\n        return 0 === e && (this.sign = !1), this;\n      }\n    }, {\n      key: \"__initializeDigits\",\n      value: function () {\n        for (var e = 0; e < this.length; e++) this[e] = 0;\n      }\n    }, {\n      key: \"__clzmsd\",\n      value: function () {\n        return o.__clz32(this[this.length - 1]);\n      }\n    }, {\n      key: \"__inplaceMultiplyAdd\",\n      value: function (e, t, _) {\n        _ > this.length && (_ = this.length);\n\n        for (var n = 65535 & e, l = e >>> 16, g = 0, a = 65535 & t, u = t >>> 16, s = 0; s < _; s++) {\n          var r = this.__digit(s),\n              d = 65535 & r,\n              h = r >>> 16,\n              b = o.__imul(d, n),\n              m = o.__imul(d, l),\n              c = o.__imul(h, n),\n              v = o.__imul(h, l),\n              f = a + (65535 & b),\n              y = u + g + (f >>> 16) + (b >>> 16) + (65535 & m) + (65535 & c);\n\n          a = (m >>> 16) + (c >>> 16) + (65535 & v) + (y >>> 16), g = a >>> 16, a &= 65535, u = v >>> 16;\n\n          this.__setDigit(s, 65535 & f | y << 16);\n        }\n\n        if (0 !== g || 0 !== a || 0 !== u) throw new Error(\"implementation bug\");\n      }\n    }, {\n      key: \"__inplaceAdd\",\n      value: function (e, t, _) {\n        for (var n, l = 0, g = 0; g < _; g++) n = this.__halfDigit(t + g) + e.__halfDigit(g) + l, l = n >>> 16, this.__setHalfDigit(t + g, n);\n\n        return l;\n      }\n    }, {\n      key: \"__inplaceSub\",\n      value: function (e, t, _) {\n        var n = 0;\n\n        if (1 & t) {\n          t >>= 1;\n\n          for (var l = this.__digit(t), g = 65535 & l, o = 0; o < _ - 1 >>> 1; o++) {\n            var a = e.__digit(o),\n                u = (l >>> 16) - (65535 & a) - n;\n\n            n = 1 & u >>> 16, this.__setDigit(t + o, u << 16 | 65535 & g), l = this.__digit(t + o + 1), g = (65535 & l) - (a >>> 16) - n, n = 1 & g >>> 16;\n          }\n\n          var s = e.__digit(o),\n              r = (l >>> 16) - (65535 & s) - n;\n\n          n = 1 & r >>> 16, this.__setDigit(t + o, r << 16 | 65535 & g);\n          if (t + o + 1 >= this.length) throw new RangeError(\"out of bounds\");\n          0 == (1 & _) && (l = this.__digit(t + o + 1), g = (65535 & l) - (s >>> 16) - n, n = 1 & g >>> 16, this.__setDigit(t + e.length, 4294901760 & l | 65535 & g));\n        } else {\n          t >>= 1;\n\n          for (var d = 0; d < e.length - 1; d++) {\n            var h = this.__digit(t + d),\n                b = e.__digit(d),\n                m = (65535 & h) - (65535 & b) - n;\n\n            n = 1 & m >>> 16;\n            var c = (h >>> 16) - (b >>> 16) - n;\n            n = 1 & c >>> 16, this.__setDigit(t + d, c << 16 | 65535 & m);\n          }\n\n          var v = this.__digit(t + d),\n              f = e.__digit(d),\n              y = (65535 & v) - (65535 & f) - n;\n\n          n = 1 & y >>> 16;\n          var k = 0;\n          0 == (1 & _) && (k = (v >>> 16) - (f >>> 16) - n, n = 1 & k >>> 16), this.__setDigit(t + d, k << 16 | 65535 & y);\n        }\n\n        return n;\n      }\n    }, {\n      key: \"__inplaceRightShift\",\n      value: function (e) {\n        if (0 !== e) {\n          for (var t, _ = this.__digit(0) >>> e, n = this.length - 1, l = 0; l < n; l++) t = this.__digit(l + 1), this.__setDigit(l, t << 32 - e | _), _ = t >>> e;\n\n          this.__setDigit(n, _);\n        }\n      }\n    }, {\n      key: \"__digit\",\n      value: function (e) {\n        return this[e];\n      }\n    }, {\n      key: \"__unsignedDigit\",\n      value: function (e) {\n        return this[e] >>> 0;\n      }\n    }, {\n      key: \"__setDigit\",\n      value: function (e, t) {\n        this[e] = 0 | t;\n      }\n    }, {\n      key: \"__setDigitGrow\",\n      value: function (e, t) {\n        this[e] = 0 | t;\n      }\n    }, {\n      key: \"__halfDigitLength\",\n      value: function () {\n        var e = this.length;\n        return 65535 >= this.__unsignedDigit(e - 1) ? 2 * e - 1 : 2 * e;\n      }\n    }, {\n      key: \"__halfDigit\",\n      value: function (e) {\n        return 65535 & this[e >>> 1] >>> ((1 & e) << 4);\n      }\n    }, {\n      key: \"__setHalfDigit\",\n      value: function (e, t) {\n        var i = e >>> 1,\n            _ = this.__digit(i),\n            n = 1 & e ? 65535 & _ | t << 16 : 4294901760 & _ | 65535 & t;\n\n        this.__setDigit(i, n);\n      }\n    }], [{\n      key: \"BigInt\",\n      value: function (e) {\n        var t = Math.floor,\n            _ = Number.isFinite;\n\n        if (\"number\" == typeof e) {\n          if (0 === e) return o.__zero();\n          if ((0 | e) === e) return 0 > e ? o.__oneDigit(-e, !0) : o.__oneDigit(e, !1);\n          if (!_(e) || t(e) !== e) throw new RangeError(\"The number \" + e + \" cannot be converted to BigInt because it is not an integer\");\n          return o.__fromDouble(e);\n        }\n\n        if (\"string\" == typeof e) {\n          var n = o.__fromString(e);\n\n          if (null === n) throw new SyntaxError(\"Cannot convert \" + e + \" to a BigInt\");\n          return n;\n        }\n\n        if (\"boolean\" == typeof e) return !0 === e ? o.__oneDigit(1, !1) : o.__zero();\n\n        if (\"object\" === i(e)) {\n          if (e.constructor === o) return e;\n\n          var l = o.__toPrimitive(e);\n\n          return o.BigInt(l);\n        }\n\n        throw new TypeError(\"Cannot convert \" + e + \" to a BigInt\");\n      }\n    }, {\n      key: \"toNumber\",\n      value: function (e) {\n        var t = e.length;\n        if (0 === t) return 0;\n\n        if (1 === t) {\n          var i = e.__unsignedDigit(0);\n\n          return e.sign ? -i : i;\n        }\n\n        var _ = e.__digit(t - 1),\n            n = o.__clz32(_),\n            l = 32 * t - n;\n\n        if (1024 < l) return e.sign ? -Infinity : 1 / 0;\n        var g = l - 1,\n            a = _,\n            u = t - 1,\n            s = n + 1,\n            r = 32 === s ? 0 : a << s;\n        r >>>= 12;\n        var d = s - 12,\n            h = 12 <= s ? 0 : a << 20 + s,\n            b = 20 + s;\n        0 < d && 0 < u && (u--, a = e.__digit(u), r |= a >>> 32 - d, h = a << d, b = d), 0 < b && 0 < u && (u--, a = e.__digit(u), h |= a >>> 32 - b, b -= 32);\n\n        var m = o.__decideRounding(e, b, u, a);\n\n        if ((1 === m || 0 === m && 1 == (1 & h)) && (h = h + 1 >>> 0, 0 === h && (r++, 0 != r >>> 20 && (r = 0, g++, 1023 < g)))) return e.sign ? -Infinity : 1 / 0;\n        var c = e.sign ? -2147483648 : 0;\n        return g = g + 1023 << 20, o.__kBitConversionInts[1] = c | g | r, o.__kBitConversionInts[0] = h, o.__kBitConversionDouble[0];\n      }\n    }, {\n      key: \"unaryMinus\",\n      value: function (e) {\n        if (0 === e.length) return e;\n\n        var t = e.__copy();\n\n        return t.sign = !e.sign, t;\n      }\n    }, {\n      key: \"bitwiseNot\",\n      value: function (e) {\n        return e.sign ? o.__absoluteSubOne(e).__trim() : o.__absoluteAddOne(e, !0);\n      }\n    }, {\n      key: \"exponentiate\",\n      value: function (e, t) {\n        if (t.sign) throw new RangeError(\"Exponent must be positive\");\n        if (0 === t.length) return o.__oneDigit(1, !1);\n        if (0 === e.length) return e;\n        if (1 === e.length && 1 === e.__digit(0)) return e.sign && 0 == (1 & t.__digit(0)) ? o.unaryMinus(e) : e;\n        if (1 < t.length) throw new RangeError(\"BigInt too big\");\n\n        var i = t.__unsignedDigit(0);\n\n        if (1 === i) return e;\n        if (i >= o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n\n        if (1 === e.length && 2 === e.__digit(0)) {\n          var _ = 1 + (i >>> 5),\n              n = e.sign && 0 != (1 & i),\n              l = new o(_, n);\n\n          l.__initializeDigits();\n\n          var g = 1 << (31 & i);\n          return l.__setDigit(_ - 1, g), l;\n        }\n\n        var a = null,\n            u = e;\n\n        for (0 != (1 & i) && (a = e), i >>= 1; 0 !== i; i >>= 1) u = o.multiply(u, u), 0 != (1 & i) && (null === a ? a = u : a = o.multiply(a, u));\n\n        return a;\n      }\n    }, {\n      key: \"multiply\",\n      value: function (e, t) {\n        if (0 === e.length) return e;\n        if (0 === t.length) return t;\n\n        var _ = e.length + t.length;\n\n        32 <= e.__clzmsd() + t.__clzmsd() && _--;\n        var n = new o(_, e.sign !== t.sign);\n\n        n.__initializeDigits();\n\n        for (var l = 0; l < e.length; l++) o.__multiplyAccumulate(t, e.__digit(l), n, l);\n\n        return n.__trim();\n      }\n    }, {\n      key: \"divide\",\n      value: function (e, t) {\n        if (0 === t.length) throw new RangeError(\"Division by zero\");\n        if (0 > o.__absoluteCompare(e, t)) return o.__zero();\n\n        var i,\n            _ = e.sign !== t.sign,\n            n = t.__unsignedDigit(0);\n\n        if (1 === t.length && 65535 >= n) {\n          if (1 === n) return _ === e.sign ? e : o.unaryMinus(e);\n          i = o.__absoluteDivSmall(e, n, null);\n        } else i = o.__absoluteDivLarge(e, t, !0, !1);\n\n        return i.sign = _, i.__trim();\n      }\n    }, {\n      key: \"remainder\",\n      value: function e(t, i) {\n        if (0 === i.length) throw new RangeError(\"Division by zero\");\n        if (0 > o.__absoluteCompare(t, i)) return t;\n\n        var _ = i.__unsignedDigit(0);\n\n        if (1 === i.length && 65535 >= _) {\n          if (1 === _) return o.__zero();\n\n          var n = o.__absoluteModSmall(t, _);\n\n          return 0 === n ? o.__zero() : o.__oneDigit(n, t.sign);\n        }\n\n        var e = o.__absoluteDivLarge(t, i, !1, !0);\n\n        return e.sign = t.sign, e.__trim();\n      }\n    }, {\n      key: \"add\",\n      value: function (e, t) {\n        var i = e.sign;\n        return i === t.sign ? o.__absoluteAdd(e, t, i) : 0 <= o.__absoluteCompare(e, t) ? o.__absoluteSub(e, t, i) : o.__absoluteSub(t, e, !i);\n      }\n    }, {\n      key: \"subtract\",\n      value: function (e, t) {\n        var i = e.sign;\n        return i === t.sign ? 0 <= o.__absoluteCompare(e, t) ? o.__absoluteSub(e, t, i) : o.__absoluteSub(t, e, !i) : o.__absoluteAdd(e, t, i);\n      }\n    }, {\n      key: \"leftShift\",\n      value: function (e, t) {\n        return 0 === t.length || 0 === e.length ? e : t.sign ? o.__rightShiftByAbsolute(e, t) : o.__leftShiftByAbsolute(e, t);\n      }\n    }, {\n      key: \"signedRightShift\",\n      value: function (e, t) {\n        return 0 === t.length || 0 === e.length ? e : t.sign ? o.__leftShiftByAbsolute(e, t) : o.__rightShiftByAbsolute(e, t);\n      }\n    }, {\n      key: \"unsignedRightShift\",\n      value: function () {\n        throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\");\n      }\n    }, {\n      key: \"lessThan\",\n      value: function (e, t) {\n        return 0 > o.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"lessThanOrEqual\",\n      value: function (e, t) {\n        return 0 >= o.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"greaterThan\",\n      value: function (e, t) {\n        return 0 < o.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"greaterThanOrEqual\",\n      value: function (e, t) {\n        return 0 <= o.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"equal\",\n      value: function (e, t) {\n        if (e.sign !== t.sign) return !1;\n        if (e.length !== t.length) return !1;\n\n        for (var _ = 0; _ < e.length; _++) if (e.__digit(_) !== t.__digit(_)) return !1;\n\n        return !0;\n      }\n    }, {\n      key: \"notEqual\",\n      value: function (e, t) {\n        return !o.equal(e, t);\n      }\n    }, {\n      key: \"bitwiseAnd\",\n      value: function (e, t) {\n        if (!e.sign && !t.sign) return o.__absoluteAnd(e, t).__trim();\n\n        if (e.sign && t.sign) {\n          var i = n(e.length, t.length) + 1,\n              _ = o.__absoluteSubOne(e, i),\n              l = o.__absoluteSubOne(t);\n\n          return _ = o.__absoluteOr(_, l, _), o.__absoluteAddOne(_, !0, _).__trim();\n        }\n\n        if (e.sign) {\n          var g = [t, e];\n          e = g[0], t = g[1];\n        }\n\n        return o.__absoluteAndNot(e, o.__absoluteSubOne(t)).__trim();\n      }\n    }, {\n      key: \"bitwiseXor\",\n      value: function (e, t) {\n        if (!e.sign && !t.sign) return o.__absoluteXor(e, t).__trim();\n\n        if (e.sign && t.sign) {\n          var i = n(e.length, t.length),\n              _ = o.__absoluteSubOne(e, i),\n              l = o.__absoluteSubOne(t);\n\n          return o.__absoluteXor(_, l, _).__trim();\n        }\n\n        var g = n(e.length, t.length) + 1;\n\n        if (e.sign) {\n          var a = [t, e];\n          e = a[0], t = a[1];\n        }\n\n        var u = o.__absoluteSubOne(t, g);\n\n        return u = o.__absoluteXor(u, e, u), o.__absoluteAddOne(u, !0, u).__trim();\n      }\n    }, {\n      key: \"bitwiseOr\",\n      value: function (e, t) {\n        var i = n(e.length, t.length);\n        if (!e.sign && !t.sign) return o.__absoluteOr(e, t).__trim();\n\n        if (e.sign && t.sign) {\n          var _ = o.__absoluteSubOne(e, i),\n              l = o.__absoluteSubOne(t);\n\n          return _ = o.__absoluteAnd(_, l, _), o.__absoluteAddOne(_, !0, _).__trim();\n        }\n\n        if (e.sign) {\n          var g = [t, e];\n          e = g[0], t = g[1];\n        }\n\n        var a = o.__absoluteSubOne(t, i);\n\n        return a = o.__absoluteAndNot(a, e, a), o.__absoluteAddOne(a, !0, a).__trim();\n      }\n    }, {\n      key: \"asIntN\",\n      value: function (e, t) {\n        if (0 === t.length) return t;\n        if (0 === e) return o.__zero();\n        if (e >= o.__kMaxLengthBits) return t;\n\n        var _ = e + 31 >>> 5;\n\n        if (t.length < _) return t;\n\n        var n = t.__unsignedDigit(_ - 1),\n            l = 1 << (31 & e - 1);\n\n        if (t.length === _ && n < l) return t;\n        if (!((n & l) === l)) return o.__truncateToNBits(e, t);\n        if (!t.sign) return o.__truncateAndSubFromPowerOfTwo(e, t, !0);\n\n        if (0 == (n & l - 1)) {\n          for (var g = _ - 2; 0 <= g; g--) if (0 !== t.__digit(g)) return o.__truncateAndSubFromPowerOfTwo(e, t, !1);\n\n          return t.length === _ && n === l ? t : o.__truncateToNBits(e, t);\n        }\n\n        return o.__truncateAndSubFromPowerOfTwo(e, t, !1);\n      }\n    }, {\n      key: \"asUintN\",\n      value: function (e, t) {\n        if (0 === t.length) return t;\n        if (0 === e) return o.__zero();\n\n        if (t.sign) {\n          if (e > o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n          return o.__truncateAndSubFromPowerOfTwo(e, t, !1);\n        }\n\n        if (e >= o.__kMaxLengthBits) return t;\n        var i = e + 31 >>> 5;\n        if (t.length < i) return t;\n\n        var _ = 31 & e;\n\n        if (t.length == i) {\n          if (0 === _) return t;\n\n          var n = t.__digit(i - 1);\n\n          if (0 == n >>> _) return t;\n        }\n\n        return o.__truncateToNBits(e, t);\n      }\n    }, {\n      key: \"ADD\",\n      value: function (e, t) {\n        if (e = o.__toPrimitive(e), t = o.__toPrimitive(t), \"string\" == typeof e) return \"string\" != typeof t && (t = t.toString()), e + t;\n        if (\"string\" == typeof t) return e.toString() + t;\n        if (e = o.__toNumeric(e), t = o.__toNumeric(t), o.__isBigInt(e) && o.__isBigInt(t)) return o.add(e, t);\n        if (\"number\" == typeof e && \"number\" == typeof t) return e + t;\n        throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\");\n      }\n    }, {\n      key: \"LT\",\n      value: function (e, t) {\n        return o.__compare(e, t, 0);\n      }\n    }, {\n      key: \"LE\",\n      value: function (e, t) {\n        return o.__compare(e, t, 1);\n      }\n    }, {\n      key: \"GT\",\n      value: function (e, t) {\n        return o.__compare(e, t, 2);\n      }\n    }, {\n      key: \"GE\",\n      value: function (e, t) {\n        return o.__compare(e, t, 3);\n      }\n    }, {\n      key: \"EQ\",\n      value: function (e, t) {\n        for (;;) {\n          if (o.__isBigInt(e)) return o.__isBigInt(t) ? o.equal(e, t) : o.EQ(t, e);\n\n          if (\"number\" == typeof e) {\n            if (o.__isBigInt(t)) return o.__equalToNumber(t, e);\n            if (\"object\" !== i(t)) return e == t;\n            t = o.__toPrimitive(t);\n          } else if (\"string\" == typeof e) {\n            if (o.__isBigInt(t)) return e = o.__fromString(e), null !== e && o.equal(e, t);\n            if (\"object\" !== i(t)) return e == t;\n            t = o.__toPrimitive(t);\n          } else if (\"boolean\" == typeof e) {\n            if (o.__isBigInt(t)) return o.__equalToNumber(t, +e);\n            if (\"object\" !== i(t)) return e == t;\n            t = o.__toPrimitive(t);\n          } else if (\"symbol\" === i(e)) {\n            if (o.__isBigInt(t)) return !1;\n            if (\"object\" !== i(t)) return e == t;\n            t = o.__toPrimitive(t);\n          } else if (\"object\" === i(e)) {\n            if (\"object\" === i(t) && t.constructor !== o) return e == t;\n            e = o.__toPrimitive(e);\n          } else return e == t;\n        }\n      }\n    }, {\n      key: \"NE\",\n      value: function (e, t) {\n        return !o.EQ(e, t);\n      }\n    }, {\n      key: \"__zero\",\n      value: function () {\n        return new o(0, !1);\n      }\n    }, {\n      key: \"__oneDigit\",\n      value: function (e, t) {\n        var i = new o(1, t);\n        return i.__setDigit(0, e), i;\n      }\n    }, {\n      key: \"__decideRounding\",\n      value: function (e, t, i, _) {\n        if (0 < t) return -1;\n        var n;\n        if (0 > t) n = -t - 1;else {\n          if (0 === i) return -1;\n          i--, _ = e.__digit(i), n = 31;\n        }\n        var l = 1 << n;\n        if (0 == (_ & l)) return -1;\n        if (l -= 1, 0 != (_ & l)) return 1;\n\n        for (; 0 < i;) if (i--, 0 !== e.__digit(i)) return 1;\n\n        return 0;\n      }\n    }, {\n      key: \"__fromDouble\",\n      value: function (e) {\n        o.__kBitConversionDouble[0] = e;\n\n        var t,\n            i = 2047 & o.__kBitConversionInts[1] >>> 20,\n            _ = i - 1023,\n            n = (_ >>> 5) + 1,\n            l = new o(n, 0 > e),\n            g = 1048575 & o.__kBitConversionInts[1] | 1048576,\n            a = o.__kBitConversionInts[0],\n            u = 20,\n            s = 31 & _,\n            r = 0;\n\n        if (s < u) {\n          var d = u - s;\n          r = d + 32, t = g >>> d, g = g << 32 - d | a >>> d, a <<= 32 - d;\n        } else if (s === u) r = 32, t = g, g = a;else {\n          var h = s - u;\n          r = 32 - h, t = g << h | a >>> 32 - h, g = a << h;\n        }\n\n        l.__setDigit(n - 1, t);\n\n        for (var b = n - 2; 0 <= b; b--) 0 < r ? (r -= 32, t = g, g = a) : t = 0, l.__setDigit(b, t);\n\n        return l.__trim();\n      }\n    }, {\n      key: \"__isWhitespace\",\n      value: function (e) {\n        return !!(13 >= e && 9 <= e) || (159 >= e ? 32 == e : 131071 >= e ? 160 == e || 5760 == e : 196607 >= e ? (e &= 131071, 10 >= e || 40 == e || 41 == e || 47 == e || 95 == e || 4096 == e) : 65279 == e);\n      }\n    }, {\n      key: \"__fromString\",\n      value: function (e) {\n        var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0,\n            i = 0,\n            _ = e.length,\n            n = 0;\n        if (n === _) return o.__zero();\n\n        for (var l = e.charCodeAt(n); o.__isWhitespace(l);) {\n          if (++n === _) return o.__zero();\n          l = e.charCodeAt(n);\n        }\n\n        if (43 === l) {\n          if (++n === _) return null;\n          l = e.charCodeAt(n), i = 1;\n        } else if (45 === l) {\n          if (++n === _) return null;\n          l = e.charCodeAt(n), i = -1;\n        }\n\n        if (0 === t) {\n          if (t = 10, 48 === l) {\n            if (++n === _) return o.__zero();\n\n            if (l = e.charCodeAt(n), 88 === l || 120 === l) {\n              if (t = 16, ++n === _) return null;\n              l = e.charCodeAt(n);\n            } else if (79 === l || 111 === l) {\n              if (t = 8, ++n === _) return null;\n              l = e.charCodeAt(n);\n            } else if (66 === l || 98 === l) {\n              if (t = 2, ++n === _) return null;\n              l = e.charCodeAt(n);\n            }\n          }\n        } else if (16 === t && 48 === l) {\n          if (++n === _) return o.__zero();\n\n          if (l = e.charCodeAt(n), 88 === l || 120 === l) {\n            if (++n === _) return null;\n            l = e.charCodeAt(n);\n          }\n        }\n\n        for (; 48 === l;) {\n          if (++n === _) return o.__zero();\n          l = e.charCodeAt(n);\n        }\n\n        var g = _ - n,\n            a = o.__kMaxBitsPerChar[t],\n            u = o.__kBitsPerCharTableMultiplier - 1;\n        if (g > 1073741824 / a) return null;\n        var s = a * g + u >>> o.__kBitsPerCharTableShift,\n            r = new o(s + 31 >>> 5, !1),\n            h = 10 > t ? t : 10,\n            b = 10 < t ? t - 10 : 0;\n\n        if (0 == (t & t - 1)) {\n          a >>= o.__kBitsPerCharTableShift;\n          var c = [],\n              v = [],\n              f = !1;\n\n          do {\n            for (var y, k = 0, D = 0;;) {\n              if (y = void 0, l - 48 >>> 0 < h) y = l - 48;else if ((32 | l) - 97 >>> 0 < b) y = (32 | l) - 87;else {\n                f = !0;\n                break;\n              }\n\n              if (D += a, k = k << a | y, ++n === _) {\n                f = !0;\n                break;\n              }\n\n              if (l = e.charCodeAt(n), 32 < D + a) break;\n            }\n\n            c.push(k), v.push(D);\n          } while (!f);\n\n          o.__fillFromParts(r, c, v);\n        } else {\n          r.__initializeDigits();\n\n          var p = !1,\n              B = 0;\n\n          do {\n            for (var S, C = 0, A = 1;;) {\n              if (S = void 0, l - 48 >>> 0 < h) S = l - 48;else if ((32 | l) - 97 >>> 0 < b) S = (32 | l) - 87;else {\n                p = !0;\n                break;\n              }\n              var T = A * t;\n              if (4294967295 < T) break;\n\n              if (A = T, C = C * t + S, B++, ++n === _) {\n                p = !0;\n                break;\n              }\n\n              l = e.charCodeAt(n);\n            }\n\n            u = 32 * o.__kBitsPerCharTableMultiplier - 1;\n            var m = a * B + u >>> o.__kBitsPerCharTableShift + 5;\n\n            r.__inplaceMultiplyAdd(A, C, m);\n          } while (!p);\n        }\n\n        if (n !== _) {\n          if (!o.__isWhitespace(l)) return null;\n\n          for (n++; n < _; n++) if (l = e.charCodeAt(n), !o.__isWhitespace(l)) return null;\n        }\n\n        return 0 !== i && 10 !== t ? null : (r.sign = -1 === i, r.__trim());\n      }\n    }, {\n      key: \"__fillFromParts\",\n      value: function (e, t, _) {\n        for (var n = 0, l = 0, g = 0, o = t.length - 1; 0 <= o; o--) {\n          var a = t[o],\n              u = _[o];\n          l |= a << g, g += u, 32 === g ? (e.__setDigit(n++, l), g = 0, l = 0) : 32 < g && (e.__setDigit(n++, l), g -= 32, l = a >>> u - g);\n        }\n\n        if (0 !== l) {\n          if (n >= e.length) throw new Error(\"implementation bug\");\n\n          e.__setDigit(n++, l);\n        }\n\n        for (; n < e.length; n++) e.__setDigit(n, 0);\n      }\n    }, {\n      key: \"__toStringBasePowerOfTwo\",\n      value: function (e, t) {\n        var _ = e.length,\n            n = t - 1;\n        n = (85 & n >>> 1) + (85 & n), n = (51 & n >>> 2) + (51 & n), n = (15 & n >>> 4) + (15 & n);\n\n        var l = n,\n            g = t - 1,\n            a = e.__digit(_ - 1),\n            u = o.__clz32(a),\n            s = 0 | (32 * _ - u + l - 1) / l;\n\n        if (e.sign && s++, 268435456 < s) throw new Error(\"string too long\");\n\n        for (var r = Array(s), d = s - 1, h = 0, b = 0, m = 0; m < _ - 1; m++) {\n          var c = e.__digit(m),\n              v = (h | c << b) & g;\n\n          r[d--] = o.__kConversionChars[v];\n          var f = l - b;\n\n          for (h = c >>> f, b = 32 - f; b >= l;) r[d--] = o.__kConversionChars[h & g], h >>>= l, b -= l;\n        }\n\n        var y = (h | a << b) & g;\n\n        for (r[d--] = o.__kConversionChars[y], h = a >>> l - b; 0 !== h;) r[d--] = o.__kConversionChars[h & g], h >>>= l;\n\n        if (e.sign && (r[d--] = \"-\"), -1 !== d) throw new Error(\"implementation bug\");\n        return r.join(\"\");\n      }\n    }, {\n      key: \"__toStringGeneric\",\n      value: function (e, t, _) {\n        var n = e.length;\n        if (0 === n) return \"\";\n\n        if (1 === n) {\n          var l = e.__unsignedDigit(0).toString(t);\n\n          return !1 === _ && e.sign && (l = \"-\" + l), l;\n        }\n\n        var g = 32 * n - o.__clz32(e.__digit(n - 1)),\n            a = o.__kMaxBitsPerChar[t],\n            u = a - 1,\n            s = g * o.__kBitsPerCharTableMultiplier;\n\n        s += u - 1, s = 0 | s / u;\n\n        var r,\n            d,\n            h = s + 1 >> 1,\n            b = o.exponentiate(o.__oneDigit(t, !1), o.__oneDigit(h, !1)),\n            m = b.__unsignedDigit(0);\n\n        if (1 === b.length && 65535 >= m) {\n          r = new o(e.length, !1), r.__initializeDigits();\n\n          for (var c, v = 0, f = 2 * e.length - 1; 0 <= f; f--) c = v << 16 | e.__halfDigit(f), r.__setHalfDigit(f, 0 | c / m), v = 0 | c % m;\n\n          d = v.toString(t);\n        } else {\n          var y = o.__absoluteDivLarge(e, b, !0, !0);\n\n          r = y.quotient;\n\n          var k = y.remainder.__trim();\n\n          d = o.__toStringGeneric(k, t, !0);\n        }\n\n        r.__trim();\n\n        for (var D = o.__toStringGeneric(r, t, !0); d.length < h;) d = \"0\" + d;\n\n        return !1 === _ && e.sign && (D = \"-\" + D), D + d;\n      }\n    }, {\n      key: \"__unequalSign\",\n      value: function (e) {\n        return e ? -1 : 1;\n      }\n    }, {\n      key: \"__absoluteGreater\",\n      value: function (e) {\n        return e ? -1 : 1;\n      }\n    }, {\n      key: \"__absoluteLess\",\n      value: function (e) {\n        return e ? 1 : -1;\n      }\n    }, {\n      key: \"__compareToBigInt\",\n      value: function (e, t) {\n        var i = e.sign;\n        if (i !== t.sign) return o.__unequalSign(i);\n\n        var _ = o.__absoluteCompare(e, t);\n\n        return 0 < _ ? o.__absoluteGreater(i) : 0 > _ ? o.__absoluteLess(i) : 0;\n      }\n    }, {\n      key: \"__compareToNumber\",\n      value: function (e, i) {\n        if (!0 | i) {\n          var _ = e.sign,\n              n = 0 > i;\n          if (_ !== n) return o.__unequalSign(_);\n\n          if (0 === e.length) {\n            if (n) throw new Error(\"implementation bug\");\n            return 0 === i ? 0 : -1;\n          }\n\n          if (1 < e.length) return o.__absoluteGreater(_);\n\n          var l = t(i),\n              g = e.__unsignedDigit(0);\n\n          return g > l ? o.__absoluteGreater(_) : g < l ? o.__absoluteLess(_) : 0;\n        }\n\n        return o.__compareToDouble(e, i);\n      }\n    }, {\n      key: \"__compareToDouble\",\n      value: function (e, t) {\n        if (t !== t) return t;\n        if (t === 1 / 0) return -1;\n        if (t === -Infinity) return 1;\n        var i = e.sign;\n        if (i !== 0 > t) return o.__unequalSign(i);\n        if (0 === t) throw new Error(\"implementation bug: should be handled elsewhere\");\n        if (0 === e.length) return -1;\n        o.__kBitConversionDouble[0] = t;\n\n        var _ = 2047 & o.__kBitConversionInts[1] >>> 20;\n\n        if (2047 == _) throw new Error(\"implementation bug: handled elsewhere\");\n        var n = _ - 1023;\n        if (0 > n) return o.__absoluteGreater(i);\n\n        var l = e.length,\n            g = e.__digit(l - 1),\n            a = o.__clz32(g),\n            u = 32 * l - a,\n            s = n + 1;\n\n        if (u < s) return o.__absoluteLess(i);\n        if (u > s) return o.__absoluteGreater(i);\n        var r = 1048576 | 1048575 & o.__kBitConversionInts[1],\n            d = o.__kBitConversionInts[0],\n            h = 20,\n            b = 31 - a;\n        if (b !== (u - 1) % 31) throw new Error(\"implementation bug\");\n        var m,\n            c = 0;\n\n        if (b < h) {\n          var v = h - b;\n          c = v + 32, m = r >>> v, r = r << 32 - v | d >>> v, d <<= 32 - v;\n        } else if (b === h) c = 32, m = r, r = d;else {\n          var f = b - h;\n          c = 32 - f, m = r << f | d >>> 32 - f, r = d << f;\n        }\n\n        if (g >>>= 0, m >>>= 0, g > m) return o.__absoluteGreater(i);\n        if (g < m) return o.__absoluteLess(i);\n\n        for (var y = l - 2; 0 <= y; y--) {\n          0 < c ? (c -= 32, m = r >>> 0, r = d, d = 0) : m = 0;\n\n          var k = e.__unsignedDigit(y);\n\n          if (k > m) return o.__absoluteGreater(i);\n          if (k < m) return o.__absoluteLess(i);\n        }\n\n        if (0 !== r || 0 !== d) {\n          if (0 === c) throw new Error(\"implementation bug\");\n          return o.__absoluteLess(i);\n        }\n\n        return 0;\n      }\n    }, {\n      key: \"__equalToNumber\",\n      value: function (e, i) {\n        return i | 0 === i ? 0 === i ? 0 === e.length : 1 === e.length && e.sign === 0 > i && e.__unsignedDigit(0) === t(i) : 0 === o.__compareToDouble(e, i);\n      }\n    }, {\n      key: \"__comparisonResultToBool\",\n      value: function (e, t) {\n        switch (t) {\n          case 0:\n            return 0 > e;\n\n          case 1:\n            return 0 >= e;\n\n          case 2:\n            return 0 < e;\n\n          case 3:\n            return 0 <= e;\n        }\n\n        throw new Error(\"unreachable\");\n      }\n    }, {\n      key: \"__compare\",\n      value: function (e, t, i) {\n        if (e = o.__toPrimitive(e), t = o.__toPrimitive(t), \"string\" == typeof e && \"string\" == typeof t) switch (i) {\n          case 0:\n            return e < t;\n\n          case 1:\n            return e <= t;\n\n          case 2:\n            return e > t;\n\n          case 3:\n            return e >= t;\n        }\n        if (o.__isBigInt(e) && \"string\" == typeof t) return t = o.__fromString(t), null !== t && o.__comparisonResultToBool(o.__compareToBigInt(e, t), i);\n        if (\"string\" == typeof e && o.__isBigInt(t)) return e = o.__fromString(e), null !== e && o.__comparisonResultToBool(o.__compareToBigInt(e, t), i);\n\n        if (e = o.__toNumeric(e), t = o.__toNumeric(t), o.__isBigInt(e)) {\n          if (o.__isBigInt(t)) return o.__comparisonResultToBool(o.__compareToBigInt(e, t), i);\n          if (\"number\" != typeof t) throw new Error(\"implementation bug\");\n          return o.__comparisonResultToBool(o.__compareToNumber(e, t), i);\n        }\n\n        if (\"number\" != typeof e) throw new Error(\"implementation bug\");\n        if (o.__isBigInt(t)) return o.__comparisonResultToBool(o.__compareToNumber(t, e), 2 ^ i);\n        if (\"number\" != typeof t) throw new Error(\"implementation bug\");\n        return 0 === i ? e < t : 1 === i ? e <= t : 2 === i ? e > t : 3 === i ? e >= t : void 0;\n      }\n    }, {\n      key: \"__absoluteAdd\",\n      value: function (e, t, _) {\n        if (e.length < t.length) return o.__absoluteAdd(t, e, _);\n        if (0 === e.length) return e;\n        if (0 === t.length) return e.sign === _ ? e : o.unaryMinus(e);\n        var n = e.length;\n        (0 === e.__clzmsd() || t.length === e.length && 0 === t.__clzmsd()) && n++;\n\n        for (var l = new o(n, _), g = 0, a = 0; a < t.length; a++) {\n          var u = t.__digit(a),\n              s = e.__digit(a),\n              r = (65535 & s) + (65535 & u) + g,\n              d = (s >>> 16) + (u >>> 16) + (r >>> 16);\n\n          g = d >>> 16, l.__setDigit(a, 65535 & r | d << 16);\n        }\n\n        for (; a < e.length; a++) {\n          var h = e.__digit(a),\n              b = (65535 & h) + g,\n              m = (h >>> 16) + (b >>> 16);\n\n          g = m >>> 16, l.__setDigit(a, 65535 & b | m << 16);\n        }\n\n        return a < l.length && l.__setDigit(a, g), l.__trim();\n      }\n    }, {\n      key: \"__absoluteSub\",\n      value: function (e, t, _) {\n        if (0 === e.length) return e;\n        if (0 === t.length) return e.sign === _ ? e : o.unaryMinus(e);\n\n        for (var n = new o(e.length, _), l = 0, g = 0; g < t.length; g++) {\n          var a = e.__digit(g),\n              u = t.__digit(g),\n              s = (65535 & a) - (65535 & u) - l;\n\n          l = 1 & s >>> 16;\n          var r = (a >>> 16) - (u >>> 16) - l;\n          l = 1 & r >>> 16, n.__setDigit(g, 65535 & s | r << 16);\n        }\n\n        for (; g < e.length; g++) {\n          var d = e.__digit(g),\n              h = (65535 & d) - l;\n\n          l = 1 & h >>> 16;\n          var b = (d >>> 16) - l;\n          l = 1 & b >>> 16, n.__setDigit(g, 65535 & h | b << 16);\n        }\n\n        return n.__trim();\n      }\n    }, {\n      key: \"__absoluteAddOne\",\n      value: function (e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length;\n\n        null === _ ? _ = new o(n, t) : _.sign = t;\n\n        for (var l, g = !0, a = 0; a < n; a++) {\n          if (l = e.__digit(a), g) {\n            var u = -1 === l;\n            l = 0 | l + 1, g = u;\n          }\n\n          _.__setDigit(a, l);\n        }\n\n        return g && _.__setDigitGrow(n, 1), _;\n      }\n    }, {\n      key: \"__absoluteSubOne\",\n      value: function (e, t) {\n        var _ = e.length;\n        t = t || _;\n\n        for (var n, l = new o(t, !1), g = !0, a = 0; a < _; a++) {\n          if (n = e.__digit(a), g) {\n            var u = 0 === n;\n            n = 0 | n - 1, g = u;\n          }\n\n          l.__setDigit(a, n);\n        }\n\n        if (g) throw new Error(\"implementation bug\");\n\n        for (var s = _; s < t; s++) l.__setDigit(s, 0);\n\n        return l;\n      }\n    }, {\n      key: \"__absoluteAnd\",\n      value: function (e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            l = t.length,\n            g = l;\n\n        if (n < l) {\n          g = n;\n          var a = e,\n              u = n;\n          e = t, n = l, t = a, l = u;\n        }\n\n        var s = g;\n        null === _ ? _ = new o(s, !1) : s = _.length;\n\n        for (var r = 0; r < g; r++) _.__setDigit(r, e.__digit(r) & t.__digit(r));\n\n        for (; r < s; r++) _.__setDigit(r, 0);\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteAndNot\",\n      value: function (e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            l = t.length,\n            g = l;\n\n        n < l && (g = n);\n        var a = n;\n        null === _ ? _ = new o(a, !1) : a = _.length;\n\n        for (var u = 0; u < g; u++) _.__setDigit(u, e.__digit(u) & ~t.__digit(u));\n\n        for (; u < n; u++) _.__setDigit(u, e.__digit(u));\n\n        for (; u < a; u++) _.__setDigit(u, 0);\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteOr\",\n      value: function (e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            l = t.length,\n            g = l;\n\n        if (n < l) {\n          g = n;\n          var a = e,\n              u = n;\n          e = t, n = l, t = a, l = u;\n        }\n\n        var s = n;\n        null === _ ? _ = new o(s, !1) : s = _.length;\n\n        for (var r = 0; r < g; r++) _.__setDigit(r, e.__digit(r) | t.__digit(r));\n\n        for (; r < n; r++) _.__setDigit(r, e.__digit(r));\n\n        for (; r < s; r++) _.__setDigit(r, 0);\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteXor\",\n      value: function (e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            l = t.length,\n            g = l;\n\n        if (n < l) {\n          g = n;\n          var a = e,\n              u = n;\n          e = t, n = l, t = a, l = u;\n        }\n\n        var s = n;\n        null === _ ? _ = new o(s, !1) : s = _.length;\n\n        for (var r = 0; r < g; r++) _.__setDigit(r, e.__digit(r) ^ t.__digit(r));\n\n        for (; r < n; r++) _.__setDigit(r, e.__digit(r));\n\n        for (; r < s; r++) _.__setDigit(r, 0);\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteCompare\",\n      value: function (e, t) {\n        var _ = e.length - t.length;\n\n        if (0 != _) return _;\n\n        for (var n = e.length - 1; 0 <= n && e.__digit(n) === t.__digit(n);) n--;\n\n        return 0 > n ? 0 : e.__unsignedDigit(n) > t.__unsignedDigit(n) ? 1 : -1;\n      }\n    }, {\n      key: \"__multiplyAccumulate\",\n      value: function (e, t, _, n) {\n        if (0 !== t) {\n          for (var l = 65535 & t, g = t >>> 16, a = 0, u = 0, s = 0, r = 0; r < e.length; r++, n++) {\n            var d = _.__digit(n),\n                h = 65535 & d,\n                b = d >>> 16,\n                m = e.__digit(r),\n                c = 65535 & m,\n                v = m >>> 16,\n                f = o.__imul(c, l),\n                y = o.__imul(c, g),\n                k = o.__imul(v, l),\n                D = o.__imul(v, g);\n\n            h += u + (65535 & f), b += s + a + (h >>> 16) + (f >>> 16) + (65535 & y) + (65535 & k), a = b >>> 16, u = (y >>> 16) + (k >>> 16) + (65535 & D) + a, a = u >>> 16, u &= 65535, s = D >>> 16, d = 65535 & h | b << 16, _.__setDigit(n, d);\n          }\n\n          for (; 0 !== a || 0 !== u || 0 !== s; n++) {\n            var p = _.__digit(n),\n                B = (65535 & p) + u,\n                S = (p >>> 16) + (B >>> 16) + s + a;\n\n            u = 0, s = 0, a = S >>> 16, p = 65535 & B | S << 16, _.__setDigit(n, p);\n          }\n        }\n      }\n    }, {\n      key: \"__internalMultiplyAdd\",\n      value: function (e, t, _, l, g) {\n        for (var a = _, u = 0, s = 0; s < l; s++) {\n          var r = e.__digit(s),\n              d = o.__imul(65535 & r, t),\n              h = (65535 & d) + u + a;\n\n          a = h >>> 16;\n\n          var b = o.__imul(r >>> 16, t),\n              m = (65535 & b) + (d >>> 16) + a;\n\n          a = m >>> 16, u = b >>> 16, g.__setDigit(s, m << 16 | 65535 & h);\n        }\n\n        if (g.length > l) for (g.__setDigit(l++, a + u); l < g.length;) g.__setDigit(l++, 0);else if (0 !== a + u) throw new Error(\"implementation bug\");\n      }\n    }, {\n      key: \"__absoluteDivSmall\",\n      value: function (e, t, _) {\n        null === _ && (_ = new o(e.length, !1));\n\n        for (var n = 0, l = 2 * e.length - 1; 0 <= l; l -= 2) {\n          var g = (n << 16 | e.__halfDigit(l)) >>> 0,\n              a = 0 | g / t;\n          n = 0 | g % t, g = (n << 16 | e.__halfDigit(l - 1)) >>> 0;\n          var u = 0 | g / t;\n          n = 0 | g % t, _.__setDigit(l >>> 1, a << 16 | u);\n        }\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteModSmall\",\n      value: function (e, t) {\n        for (var _, n = 0, l = 2 * e.length - 1; 0 <= l; l--) _ = (n << 16 | e.__halfDigit(l)) >>> 0, n = 0 | _ % t;\n\n        return n;\n      }\n    }, {\n      key: \"__absoluteDivLarge\",\n      value: function (e, t, i, _) {\n        var l = t.__halfDigitLength(),\n            n = t.length,\n            g = e.__halfDigitLength() - l,\n            a = null;\n\n        i && (a = new o(g + 2 >>> 1, !1), a.__initializeDigits());\n        var s = new o(l + 2 >>> 1, !1);\n\n        s.__initializeDigits();\n\n        var r = o.__clz16(t.__halfDigit(l - 1));\n\n        0 < r && (t = o.__specialLeftShift(t, r, 0));\n\n        for (var d = o.__specialLeftShift(e, r, 1), u = t.__halfDigit(l - 1), h = 0, b = g; 0 <= b; b--) {\n          var m = 65535,\n              v = d.__halfDigit(b + l);\n\n          if (v !== u) {\n            var f = (v << 16 | d.__halfDigit(b + l - 1)) >>> 0;\n            m = 0 | f / u;\n\n            for (var y = 0 | f % u, k = t.__halfDigit(l - 2), D = d.__halfDigit(b + l - 2); o.__imul(m, k) >>> 0 > (y << 16 | D) >>> 0 && (m--, y += u, !(65535 < y)););\n          }\n\n          o.__internalMultiplyAdd(t, m, 0, n, s);\n\n          var p = d.__inplaceSub(s, b, l + 1);\n\n          0 !== p && (p = d.__inplaceAdd(t, b, l), d.__setHalfDigit(b + l, d.__halfDigit(b + l) + p), m--), i && (1 & b ? h = m << 16 : a.__setDigit(b >>> 1, h | m));\n        }\n\n        return _ ? (d.__inplaceRightShift(r), i ? {\n          quotient: a,\n          remainder: d\n        } : d) : i ? a : void 0;\n      }\n    }, {\n      key: \"__clz16\",\n      value: function (e) {\n        return o.__clz32(e) - 16;\n      }\n    }, {\n      key: \"__specialLeftShift\",\n      value: function (e, t, _) {\n        var l = e.length,\n            n = new o(l + _, !1);\n\n        if (0 === t) {\n          for (var g = 0; g < l; g++) n.__setDigit(g, e.__digit(g));\n\n          return 0 < _ && n.__setDigit(l, 0), n;\n        }\n\n        for (var a, u = 0, s = 0; s < l; s++) a = e.__digit(s), n.__setDigit(s, a << t | u), u = a >>> 32 - t;\n\n        return 0 < _ && n.__setDigit(l, u), n;\n      }\n    }, {\n      key: \"__leftShiftByAbsolute\",\n      value: function (e, t) {\n        var _ = o.__toShiftAmount(t);\n\n        if (0 > _) throw new RangeError(\"BigInt too big\");\n        var n = _ >>> 5,\n            l = 31 & _,\n            g = e.length,\n            a = 0 !== l && 0 != e.__digit(g - 1) >>> 32 - l,\n            u = g + n + (a ? 1 : 0),\n            s = new o(u, e.sign);\n\n        if (0 === l) {\n          for (var r = 0; r < n; r++) s.__setDigit(r, 0);\n\n          for (; r < u; r++) s.__setDigit(r, e.__digit(r - n));\n        } else {\n          for (var h = 0, b = 0; b < n; b++) s.__setDigit(b, 0);\n\n          for (var m, c = 0; c < g; c++) m = e.__digit(c), s.__setDigit(c + n, m << l | h), h = m >>> 32 - l;\n\n          if (a) s.__setDigit(g + n, h);else if (0 !== h) throw new Error(\"implementation bug\");\n        }\n\n        return s.__trim();\n      }\n    }, {\n      key: \"__rightShiftByAbsolute\",\n      value: function (e, t) {\n        var _ = e.length,\n            n = e.sign,\n            l = o.__toShiftAmount(t);\n\n        if (0 > l) return o.__rightShiftByMaximum(n);\n        var g = l >>> 5,\n            a = 31 & l,\n            u = _ - g;\n        if (0 >= u) return o.__rightShiftByMaximum(n);\n        var s = !1;\n\n        if (n) {\n          if (0 != (e.__digit(g) & (1 << a) - 1)) s = !0;else for (var r = 0; r < g; r++) if (0 !== e.__digit(r)) {\n            s = !0;\n            break;\n          }\n        }\n\n        if (s && 0 === a) {\n          var h = e.__digit(_ - 1);\n\n          0 == ~h && u++;\n        }\n\n        var b = new o(u, n);\n        if (0 === a) for (var m = g; m < _; m++) b.__setDigit(m - g, e.__digit(m));else {\n          for (var c, v = e.__digit(g) >>> a, f = _ - g - 1, y = 0; y < f; y++) c = e.__digit(y + g + 1), b.__setDigit(y, c << 32 - a | v), v = c >>> a;\n\n          b.__setDigit(f, v);\n        }\n        return s && (b = o.__absoluteAddOne(b, !0, b)), b.__trim();\n      }\n    }, {\n      key: \"__rightShiftByMaximum\",\n      value: function (e) {\n        return e ? o.__oneDigit(1, !0) : o.__zero();\n      }\n    }, {\n      key: \"__toShiftAmount\",\n      value: function (e) {\n        if (1 < e.length) return -1;\n\n        var t = e.__unsignedDigit(0);\n\n        return t > o.__kMaxLengthBits ? -1 : t;\n      }\n    }, {\n      key: \"__toPrimitive\",\n      value: function (e) {\n        var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : \"default\";\n        if (\"object\" !== i(e)) return e;\n        if (e.constructor === o) return e;\n        var _ = e[Symbol.toPrimitive];\n\n        if (_) {\n          var n = _(t);\n\n          if (\"object\" !== i(n)) return n;\n          throw new TypeError(\"Cannot convert object to primitive value\");\n        }\n\n        var l = e.valueOf;\n\n        if (l) {\n          var g = l.call(e);\n          if (\"object\" !== i(g)) return g;\n        }\n\n        var a = e.toString;\n\n        if (a) {\n          var u = a.call(e);\n          if (\"object\" !== i(u)) return u;\n        }\n\n        throw new TypeError(\"Cannot convert object to primitive value\");\n      }\n    }, {\n      key: \"__toNumeric\",\n      value: function (e) {\n        return o.__isBigInt(e) ? e : +e;\n      }\n    }, {\n      key: \"__isBigInt\",\n      value: function (e) {\n        return \"object\" === i(e) && null !== e && e.constructor === o;\n      }\n    }, {\n      key: \"__truncateToNBits\",\n      value: function (e, t) {\n        for (var _ = e + 31 >>> 5, n = new o(_, t.sign), l = _ - 1, g = 0; g < l; g++) n.__setDigit(g, t.__digit(g));\n\n        var a = t.__digit(l);\n\n        if (0 != (31 & e)) {\n          var u = 32 - (31 & e);\n          a = a << u >>> u;\n        }\n\n        return n.__setDigit(l, a), n.__trim();\n      }\n    }, {\n      key: \"__truncateAndSubFromPowerOfTwo\",\n      value: function (e, t, _) {\n        for (var n = Math.min, l = e + 31 >>> 5, g = new o(l, _), a = 0, u = l - 1, s = 0, r = n(u, t.length); a < r; a++) {\n          var d = t.__digit(a),\n              h = 0 - (65535 & d) - s;\n\n          s = 1 & h >>> 16;\n          var b = 0 - (d >>> 16) - s;\n          s = 1 & b >>> 16, g.__setDigit(a, 65535 & h | b << 16);\n        }\n\n        for (; a < u; a++) g.__setDigit(a, 0 | -s);\n\n        var m,\n            c = u < t.length ? t.__digit(u) : 0,\n            v = 31 & e;\n\n        if (0 === v) {\n          var f = 0 - (65535 & c) - s;\n          s = 1 & f >>> 16;\n          var y = 0 - (c >>> 16) - s;\n          m = 65535 & f | y << 16;\n        } else {\n          var k = 32 - v;\n          c = c << k >>> k;\n          var D = 1 << 32 - k,\n              p = (65535 & D) - (65535 & c) - s;\n          s = 1 & p >>> 16;\n          var B = (D >>> 16) - (c >>> 16) - s;\n          m = 65535 & p | B << 16, m &= D - 1;\n        }\n\n        return g.__setDigit(u, m), g.__trim();\n      }\n    }, {\n      key: \"__digitPow\",\n      value: function (e, t) {\n        for (var i = 1; 0 < t;) 1 & t && (i *= e), t >>>= 1, e *= e;\n\n        return i;\n      }\n    }]), o;\n  }(h(Array));\n\n  return k.__kMaxLength = 33554432, k.__kMaxLengthBits = k.__kMaxLength << 5, k.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], k.__kBitsPerCharTableShift = 5, k.__kBitsPerCharTableMultiplier = 1 << k.__kBitsPerCharTableShift, k.__kConversionChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], k.__kBitConversionBuffer = new ArrayBuffer(8), k.__kBitConversionDouble = new Float64Array(k.__kBitConversionBuffer), k.__kBitConversionInts = new Int32Array(k.__kBitConversionBuffer), k.__clz32 = t || function (e) {\n    var t = Math.LN2,\n        i = Math.log;\n    return 0 === e ? 32 : 0 | 31 - (0 | i(e >>> 0) / t);\n  }, k.__imul = e || function (e, t) {\n    return 0 | e * t;\n  }, k;\n});","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fallbackRipemd160 = exports.fallbackSha512 = exports.fallbackSha256 = exports.fallbackHmacSha512Sign = exports.fallbackHmacSha256Sign = exports.fallbackAesDecrypt = exports.fallbackAesEncrypt = void 0;\n\nconst aes_js_1 = __importDefault(require(\"aes-js\"));\n\nconst hash = __importStar(require(\"hash.js\"));\n\nconst enc_utils_1 = require(\"enc-utils\");\n\nconst constants_1 = require(\"../constants\");\n\nconst index_1 = require(\"../index\");\n\nfunction fallbackAesEncrypt(iv, key, data) {\n  const aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n  const padded = index_1.pkcs7.pad(data);\n  const encryptedBytes = aesCbc.encrypt(padded);\n  return new Uint8Array(encryptedBytes);\n}\n\nexports.fallbackAesEncrypt = fallbackAesEncrypt;\n\nfunction fallbackAesDecrypt(iv, key, data) {\n  const aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n  const encryptedBytes = aesCbc.decrypt(data);\n  const padded = new Uint8Array(encryptedBytes);\n  const result = index_1.pkcs7.unpad(padded);\n  return result;\n}\n\nexports.fallbackAesDecrypt = fallbackAesDecrypt;\n\nfunction fallbackHmacSha256Sign(key, data) {\n  const result = hash.hmac(hash[constants_1.SHA256_NODE_ALGO], key).update(data).digest(constants_1.HEX_ENC);\n  return enc_utils_1.hexToArray(result);\n}\n\nexports.fallbackHmacSha256Sign = fallbackHmacSha256Sign;\n\nfunction fallbackHmacSha512Sign(key, data) {\n  const result = hash.hmac(hash[constants_1.SHA512_NODE_ALGO], key).update(data).digest(constants_1.HEX_ENC);\n  return enc_utils_1.hexToArray(result);\n}\n\nexports.fallbackHmacSha512Sign = fallbackHmacSha512Sign;\n\nfunction fallbackSha256(msg) {\n  const result = hash.sha256().update(msg).digest(constants_1.HEX_ENC);\n  return enc_utils_1.hexToArray(result);\n}\n\nexports.fallbackSha256 = fallbackSha256;\n\nfunction fallbackSha512(msg) {\n  const result = hash.sha512().update(msg).digest(constants_1.HEX_ENC);\n  return enc_utils_1.hexToArray(result);\n}\n\nexports.fallbackSha512 = fallbackSha512;\n\nfunction fallbackRipemd160(msg) {\n  const result = hash.ripemd160().update(msg).digest(constants_1.HEX_ENC);\n  return enc_utils_1.hexToArray(result);\n}\n\nexports.fallbackRipemd160 = fallbackRipemd160;","map":null,"metadata":{},"sourceType":"script"}
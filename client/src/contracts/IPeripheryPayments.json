{
  "contractName": "IPeripheryPayments",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/node_modules/@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n",
  "sourcePath": "/Users/kilianmongey/Desktop/HomePageDigiBox/DigiBox/node_modules/@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
  "ast": {
    "absolutePath": "project:/node_modules/@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
    "exportedSymbols": {
      "IPeripheryPayments": [
        677
      ]
    },
    "id": 678,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 653,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 654,
          "nodeType": "StructuredDocumentation",
          "src": "71:92:6",
          "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
        },
        "fullyImplemented": false,
        "id": 677,
        "linearizedBaseContracts": [
          677
        ],
        "name": "IPeripheryPayments",
        "nameLocation": "173:18:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 655,
              "nodeType": "StructuredDocumentation",
              "src": "198:302:6",
              "text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
            },
            "functionSelector": "49404b7c",
            "id": 662,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWETH9",
            "nameLocation": "514:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "534:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "526:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "557:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "549:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:42:6"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:6"
            },
            "scope": 677,
            "src": "505:80:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 663,
              "nodeType": "StructuredDocumentation",
              "src": "591:225:6",
              "text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
            },
            "functionSelector": "12210e8a",
            "id": 666,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundETH",
            "nameLocation": "830:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:6"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:6"
            },
            "scope": 677,
            "src": "821:38:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 667,
              "nodeType": "StructuredDocumentation",
              "src": "865:427:6",
              "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
            },
            "functionSelector": "df2ab5bb",
            "id": 676,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sweepToken",
            "nameLocation": "1306:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1334:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1326:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "1357:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1349:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1388:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1380:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:87:6"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:6"
            },
            "scope": 677,
            "src": "1297:124:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 678,
        "src": "163:1260:6",
        "usedErrors": []
      }
    ],
    "src": "45:1379:6"
  },
  "legacyAST": {
    "absolutePath": "project:/node_modules/@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
    "exportedSymbols": {
      "IPeripheryPayments": [
        677
      ]
    },
    "id": 678,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 653,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 654,
          "nodeType": "StructuredDocumentation",
          "src": "71:92:6",
          "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
        },
        "fullyImplemented": false,
        "id": 677,
        "linearizedBaseContracts": [
          677
        ],
        "name": "IPeripheryPayments",
        "nameLocation": "173:18:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 655,
              "nodeType": "StructuredDocumentation",
              "src": "198:302:6",
              "text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
            },
            "functionSelector": "49404b7c",
            "id": 662,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWETH9",
            "nameLocation": "514:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "534:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "526:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "557:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "549:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:42:6"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:6"
            },
            "scope": 677,
            "src": "505:80:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 663,
              "nodeType": "StructuredDocumentation",
              "src": "591:225:6",
              "text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
            },
            "functionSelector": "12210e8a",
            "id": 666,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundETH",
            "nameLocation": "830:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:6"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:6"
            },
            "scope": 677,
            "src": "821:38:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 667,
              "nodeType": "StructuredDocumentation",
              "src": "865:427:6",
              "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
            },
            "functionSelector": "df2ab5bb",
            "id": 676,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sweepToken",
            "nameLocation": "1306:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1334:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1326:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "1357:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1349:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1388:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1380:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:87:6"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:6"
            },
            "scope": 677,
            "src": "1297:124:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 678,
        "src": "163:1260:6",
        "usedErrors": []
      }
    ],
    "src": "45:1379:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-15T20:48:50.378Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "refundETH()": {
        "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
      },
      "sweepToken(address,uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
        "params": {
          "amountMinimum": "The minimum amount of token required for a transfer",
          "recipient": "The destination address of the token",
          "token": "The contract address of the token which will be transferred to `recipient`"
        }
      },
      "unwrapWETH9(uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
        "params": {
          "amountMinimum": "The minimum amount of WETH9 to unwrap",
          "recipient": "The address receiving ETH"
        }
      }
    },
    "title": "Periphery Payments",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "refundETH()": {
        "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
      },
      "sweepToken(address,uint256,address)": {
        "notice": "Transfers the full amount of a token held by this contract to recipient"
      },
      "unwrapWETH9(uint256,address)": {
        "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
      }
    },
    "notice": "Functions to ease deposits and withdrawals of ETH",
    "version": 1
  }
}
{"ast":null,"code":"var _jsxFileName = \"/Users/kilianmongey/Desktop/Github/DigiBox/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"./App.css\";\nimport Routes from './Routes';\n\nconst App = () => {\n  const [web3, setweb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  useEffect(() => {\n    const init = async () => {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n      const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address);\n      setweb3(web3);\n      setAccounts(accounts);\n      setContract(contract);\n    };\n\n    init();\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kilianmongey/Desktop/Github/DigiBox/src/App.js"],"names":["React","useState","useEffect","SimpleStorageContract","getWeb3","BrowserRouter","Router","Routes","App","web3","setweb3","undefined","accounts","setAccounts","contract","setContract","init","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,SAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACU,SAAD,CAAxC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACU,SAAD,CAAxC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMc,IAAI,GAAG,YAAW;AACf;AACP,YAAMP,IAAI,GAAG,MAAML,OAAO,EAA1B,CAFsB,CAItB;;AACA,YAAMQ,QAAQ,GAAG,MAAMH,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAvB,CALsB,CAOtB;;AACA,YAAMC,SAAS,GAAG,MAAMV,IAAI,CAACQ,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,YAAMC,eAAe,GAAGnB,qBAAqB,CAACoB,QAAtB,CAA+BJ,SAA/B,CAAxB;AACA,YAAMK,QAAQ,GAAG,IAAIf,IAAI,CAACQ,GAAL,CAASQ,QAAb,CACftB,qBAAqB,CAACuB,GADP,EAEfJ,eAAe,IAAIA,eAAe,CAACK,OAFpB,CAAjB;AAKAjB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAI,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAlBD;;AAmBAE,IAAAA,IAAI;AACL,GAtBQ,EAsBN,EAtBM,CAAT;AAyBE,sBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAOH,CAtCD;;AAwCA,eAAeR,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"./App.css\";\nimport Routes from './Routes'\n\nconst App = () => {\n  \n  const [web3, setweb3] = useState(undefined)\n  const [accounts, setAccounts] = useState(undefined)\n  const [contract, setContract] = useState(undefined)\n\n  useEffect(() => {\n\n    const init = async() => {\n             // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      setweb3(web3)\n      setAccounts(accounts)\n      setContract(contract)\n    }\n    init()\n  }, []) \n \n\n    return (\n\n      <Router>\n        <Routes />\n      </Router>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
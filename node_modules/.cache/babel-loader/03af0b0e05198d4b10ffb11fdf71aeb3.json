{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMobileLinkRegistry = exports.getMobileRegistryEntry = exports.saveMobileLinkInfo = exports.formatIOSMobile = exports.mobileLinkChoiceKey = void 0;\n\nconst local_1 = require(\"./local\");\n\nexports.mobileLinkChoiceKey = \"WALLETCONNECT_DEEPLINK_CHOICE\";\n\nfunction formatIOSMobile(uri, entry) {\n  const encodedUri = encodeURIComponent(uri);\n  return entry.universalLink ? `${entry.universalLink}/wc?uri=${encodedUri}` : entry.deepLink ? `${entry.deepLink}${entry.deepLink.endsWith(\":\") ? \"//\" : \"/\"}wc?uri=${encodedUri}` : \"\";\n}\n\nexports.formatIOSMobile = formatIOSMobile;\n\nfunction saveMobileLinkInfo(data) {\n  const focusUri = data.href.split(\"?\")[0];\n  local_1.setLocal(exports.mobileLinkChoiceKey, Object.assign(Object.assign({}, data), {\n    href: focusUri\n  }));\n}\n\nexports.saveMobileLinkInfo = saveMobileLinkInfo;\n\nfunction getMobileRegistryEntry(registry, name) {\n  return registry.filter(entry => entry.name.toLowerCase().includes(name.toLowerCase()))[0];\n}\n\nexports.getMobileRegistryEntry = getMobileRegistryEntry;\n\nfunction getMobileLinkRegistry(registry, whitelist) {\n  let links = registry;\n\n  if (whitelist && whitelist.length) {\n    links = whitelist.map(name => getMobileRegistryEntry(registry, name));\n  }\n\n  return links;\n}\n\nexports.getMobileLinkRegistry = getMobileLinkRegistry;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ripemd160 = exports.sha512 = exports.sha256 = void 0;\n\nconst helpers_1 = require(\"../helpers\");\n\nfunction sha256(msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result = helpers_1.EMPTY_UINT_ARRAY;\n\n    if (helpers_1.isBrowser()) {\n      result = yield helpers_1.browserSha256(msg);\n    } else if (helpers_1.isNode()) {\n      result = helpers_1.nodeSha256(msg);\n    } else {\n      result = helpers_1.fallbackSha256(msg);\n    }\n\n    return result;\n  });\n}\n\nexports.sha256 = sha256;\n\nfunction sha512(msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result = helpers_1.EMPTY_UINT_ARRAY;\n\n    if (helpers_1.isBrowser()) {\n      result = yield helpers_1.browserSha512(msg);\n    } else if (helpers_1.isNode()) {\n      result = helpers_1.nodeSha512(msg);\n    } else {\n      result = helpers_1.fallbackSha512(msg);\n    }\n\n    return result;\n  });\n}\n\nexports.sha512 = sha512;\n\nfunction ripemd160(msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result = helpers_1.EMPTY_UINT_ARRAY;\n\n    if (helpers_1.isNode()) {\n      result = helpers_1.nodeRipemd160(msg);\n    } else {\n      result = helpers_1.fallbackRipemd160(msg);\n    }\n\n    return result;\n  });\n}\n\nexports.ripemd160 = ripemd160;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/Users/kilianmongey/Desktop/Github/DigiBox/src/Connection.js\";\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Connection() {\n  const wallet = useWallet();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, wallet.status === 'connected' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }\n  }, \"Account: \", wallet.account), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 19\n    }\n  }, \"Balance: \", wallet.balance, \" wei\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => wallet.reset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }\n  }, \"Disconnect\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => wallet.connect(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }\n  }, \"MetaMask\")));\n} // Wrap everything in <UseWalletProvider />\n\n\nexport default (() => /*#__PURE__*/React.createElement(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Connection, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n})));","map":{"version":3,"sources":["/Users/kilianmongey/Desktop/Github/DigiBox/src/Connection.js"],"names":["useWallet","UseWalletProvider","React","Button","Connection","wallet","status","account","balance","reset","connect","provided","provider","window","cleanEthereum"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAO,sCAAP;;AAEA,SAASC,UAAT,GAAsB;AAClB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,sBACQ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAACC,MAAP,KAAkB,WAAlB,gBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBD,MAAM,CAACE,OAAvB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeF,MAAM,CAACG,OAAtB,SAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAMH,MAAM,CAACI,KAAP,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMJ,MAAM,CAACK,OAAP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARJ,CADR;AAeH,C,CAED;;;AACA,gBAAe,mBACX,oBAAC,iBAAD;AACE,EAAA,OAAO,EAAE,IADX;AAEE,EAAA,UAAU,EAAE;AACV;AACAC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAlB;AAFA,GAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADJ","sourcesContent":["import { useWallet, UseWalletProvider } from 'use-wallet'\nimport React from 'react'\nimport {Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction Connection() {\n    const wallet = useWallet()\n\n    return (\n            <div className=\"btn-meta\">\n              {wallet.status === 'connected' ? (\n                <div className=\"display-meta\">\n                  <div >Account: {wallet.account}</div>\n                  <div>Balance: {wallet.balance} wei</div>\n                  <Button color=\"primary\" onClick={() => wallet.reset()}>Disconnect</Button>\n                </div>\n              ) : (\n                <div>\n                  <Button onClick={() => wallet.connect()}>MetaMask</Button>\n                </div>\n              )}\n            </div>\n          )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default () => (\n    <UseWalletProvider\n      chainId={1337}\n      connectors={{\n        // This is how connectors get configured\n        provided: {provider: window.cleanEthereum},\n      }}\n    >\n      <Connection />\n    </UseWalletProvider>\n  )"]},"metadata":{},"sourceType":"module"}